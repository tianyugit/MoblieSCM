<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间特殊作用： 如果使用mapper动态代理方法，这里就需要配置mapper接口地址-->

<mapper namespace="test">
	<!-- 根据用户id查询一条记录（返回单条记录） -->
	<!-- 
	select标签表示sql查询，内容会封装到Mapped Statement中。
	可以将这个select标签称为一个Statement
	id：Statement的id，用于标识select中定义的 sql，id是在同一个命名空间中不允许重复
	#{}：表示一个占位符，避免sql注入
	parameterType：表示输入参数的类型
	resultType：表示输出 结果集单条记录映射的java对象类型，select查询的字段名和resultType中属性名一致，才能映射成功。
	#{value}：value表示parameter输入参数的变量，如果输入参数是简单类型，使用#{}占位符，变量名可以使用value或其它的名称 
	
	 -->
	<!-- <select id="findUserById" parameterType="int" resultType="com.test.pojo.User">
		
		SELECT * FROM USER WHERE id = #{id}
	
	</select> -->
	
	<insert id="addUser" parameterType="com.sise.pojo.User">
		  insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="lastlogintime != null" >
        lastLoginTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid},
      </if>
      <if test="account != null" >
        #{account},
      </if>
      <if test="passwd != null" >
        #{passwd},
      </if>
      <if test="email != null" >
        #{email},
      </if>
      <if test="role != null" >
        #{role},
      </if>
      <if test="remark != null" >
        #{remark},
      </if>
      <if test="status != null" >
        #{status},
      </if>
      <if test="createtime != null" >
        #{createtime},
      </if>
      <if test="lastlogintime != null" >
        #{lastlogintime},
      </if>
    </trim>
  </insert>
	
	<select id="findUserByName" parameterType="String" resultType="com.sise.pojo.User">
		SELECT * FROM USER WHERE account=#{account}
	</select>
	
	<select id="findUserById" parameterType="String" resultType="com.sise.pojo.User">
		SELECT * FROM USER WHERE userId=#{userId}
	</select>
	
	<select id="finUserByNameAndPsw" parameterType="java.util.Map" resultType="com.sise.pojo.User">
		select * from user where account=#{account} and passwd=#{passwd}
	</select>
	
	<select id="getUserList" resultType="com.sise.pojo.User">
		select * from user;
	</select>
	
	<select id="findUser" parameterType="map" resultType="com.sise.pojo.User">
		select * from user  
		<where>
			<if test="account != ''">
				and account like #{account}
			</if>
			 <if test="email != ''">
				and email like #{email}
			</if>
		</where> 
	</select>
	
	<update id="updateLoginTime" parameterType="java.util.Map">
		update user set lastLoginTime=#{lastLoginTime} where account=#{account}
	</update>
	
	<update id="updateUser" parameterType="com.sise.pojo.User">
		update user set account=#{account},passwd=#{passwd},role=#{role},status=#{status},email=#{email},remark=#{remark} where userId=#{userid}
	</update>
	
	<delete id="deleteUser" parameterType="String">
		delete from user where userId=#{userid}
	</delete>
	
	<select id="findAllWithFy" parameterType="map" resultType="com.sise.pojo.User">
		select * from user limit #{pstart},#{psize}
	</select>
	
	<select id="getLong" resultType="Integer">
		select count(*) from user
	</select>
	<!-- <select id="findAdminByNameAndPsw" parameterType="java.util.Map" resultType="com.sise.pojo.User">
		select * from admin where account=#{account} and passwd=#{passwd}
	</select> -->

</mapper>